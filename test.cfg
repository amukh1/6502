MEMORY {
    ZP:     start = $0000, size = $00FE, type = rw, define = yes;
    RAM:    start = $0200, size = $0FFF, type = rw, define = yes;
    ROM:    start = $8000, size = $8000, type = ro, define = yes;
    STACK: start = $1000, size = $0FFF, type = rw, define = yes;
}

SEGMENTS {
    ZEROPAGE: load = ZP,  type = zp;
    DATA:     load = RAM, type = rw, run = RAM;
    CODE:     load = ROM, type = ro;
    HEAP:    load = RAM, type = rw optional = yes;
    INIT:   load = ROM, type = ro optional = yes;
    STARTUP: load = ROM, type = ro;
    RODATA:  load = ROM, type = ro;
    BSS:      load = RAM, type = bss, define = yes;
    VECTORS: load = ROM, type = ro, start = $FFFA, optional = yes;
    # STACK:    load = STACK, type = bss, optional = yes;
    # ONCE:     load = ROM, type = ro, optional = yes;
}

FEATURES {
    CONDES:    segment = STARTUP,
               type    = constructor,
               label   = __CONSTRUCTOR_TABLE__,
               count   = __CONSTRUCTOR_COUNT__;
    CONDES:    segment = STARTUP,
               type    = destructor,
               label   = __DESTRUCTOR_TABLE__,
               count   = __DESTRUCTOR_COUNT__;
}

SYMBOLS { 
    __STACKSIZE__: type = weak, value = $0200; 
    # __RAM_START__: type = weak, value = $0200;
}