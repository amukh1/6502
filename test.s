;
; File generated by cc65 v 2.18 - Ubuntu 2.18-1
;
	.fopt		compiler,"cc65 v 2.18 - Ubuntu 2.18-1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_printChar
	.export		_frog
	.export		_printStr
	.export		_test
	.export		_main

; ---------------------------------------------------------------
; void __near__ printChar (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_printChar: near

.segment	"CODE"

	jsr     pusha
	lda     sp
	ldx     sp+1
	jsr     pushax
	nop
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; int __near__ frog (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_frog: near

.segment	"CODE"

	lda     #70
	sta     $01
	lda     #$00
	sta     $FFFC
	lda     #$01
	sta     $FFFD
	lda     #$80
	sta     $FFFB
	ldx     #$00
	txa
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ printStr (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_printStr: near

.segment	"CODE"

	jsr     pushax
	ldy     #$01
	lda     (sp),y
	sta     $FFFC
	dey
	lda     (sp),y
	sta     $FFFD
	lda     #$80
	sta     $FFFB
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ test (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_test: near

.segment	"CODE"

	jsr     pusha
	ldy     #$01
	lda     (sp),y
	sta     $0010
	dey
	lda     (sp),y
	sta     $0011
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #$12
	jsr     pusha
	lda     #$34
	jsr     _test
	ldx     #$00
	txa
	rts

.endproc

